<ui:composition template="/layout/content_layout.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui">
<!--
 This file is part of COMPASS. It is subject to the license terms in
 the LICENSE file found in the top-level directory of this distribution.
 (Also avialable at http://www.apache.org/licenses/LICENSE-2.0.txt)
 You may not use this file except in compliance with the License.
-->
	<ui:define name="content">
		<ui:include src="common_projecttask.xhtml" />
		<p:panel widgetVar="createScenarioPanel"
				 header="Create new Scenario for #{openScenarioBean.selectedProject.name}"
				 closable="false"
				 styleClass="contentPanelMargin">
			<h:form id="createScenarioForm" enctype="multipart/form-data">
				<h6>Name</h6>
				<p:focus />
				<p:inputText id="ScenarioNameInput"
							 value="#{createScenarioBean.newScenarioName}"
							 style="width:400px"
							 required="true">
				</p:inputText>
				<p:message for="ScenarioNameInput" id="msgScenarioNameInput" />
				<h6>Preview Image</h6>
				<p:fileUpload mode="advanced"
							  auto="true"
							  fileUploadListener="#{createScenarioBean.handleSessionImage}"
							  allowTypes="/(\.|\/)(jpe?g|png)$/"
							  update=":createScenarioForm:scenarioPreviewPreviewContainerUpdateHack"
							  dragDropSupport="true"/>
				<!-- @Hack: One can't update an element which is not in the dom, thus we update the hacky parent. -->
				<p:outputPanel id="scenarioPreviewPreviewContainerUpdateHack">
					<p:outputPanel layout="block"
							   styleClass="scenarioPreviewImage"
							   id="scenarioPreviewPreview">
					<p:graphicImage value="#{createScenarioBean.streamedPreviewImage}"
									alt=" "
									height="300"
									width="300"
									cache="false"
									rendered="#{createScenarioBean.streamedPreviewImage != null}" />
					</p:outputPanel>
				</p:outputPanel>
				<div class="modalButtonsContainer">
					<p:commandButton id="createButton"
									 value="Save"
									 action="#{createScenarioBean.confirm}"
									 update="msgScenarioNameInput"
									 styleClass="ui-priority-primary" />
					<p:commandButton value="Cancel"
									 style="margin-left:5px;"
									 immediate="true"
									 action="#{createScenarioBean.cancel}"
									 process="@this"/>
				</div>
			</h:form>
		</p:panel>
	</ui:define>
</ui:composition>
